import React from 'react';
import { makeStyles } from '@material-ui/core';
import { useDispatch } from 'react-redux';
import { useKey } from 'react-use';
import { CODE_ESCAPE } from 'keycode-js';

import { hideIntro } from 'client/slices';

const useStyles = makeStyles(() => ({
  root: {
    position: 'fixed',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    background: 'black',
    zIndex: 999999,
  },
  fade: {
    position: 'relative',
    width: '100%',
    minHeight: '60vh',
    top: '-25px',
    backgroundImage: 'linear-gradient(0deg, transparent, black 75%)',
    zIndex: 1,
  },
  starWars: {
    display: 'flex',
    justifyContent: 'center',
    position: 'relative',
    height: '800px',
    color: '#e3192d',
    fontFamily: "'Pathway Gothic One', sans-serif",
    fontSize: '500%',
    fontWeight: 'bold',
    letterSpacing: '6px',
    lineHeight: '150%',
    perspective: '400px',
    textAlign: 'justify',
  },
  '@global': {
    '.crawl': {
      position: 'relative',
      top: '99999px',
      transformOrigin: '50% 100%',
      animation: 'crawl 60s linear',
    },
    '.crawl > .title': {
      fontSize: '90%',
      textAlign: 'center',
    },
    '.crawl > .title h1': {
      margin: '0 0 100px',
      textTransform: 'uppercase',
    },
    '@keyframes crawl': {
      '0%': {
        top: '-100px',
        transform: 'rotateX(20deg)  translateZ(0)',
      },
      '100%': {
        top: '-6000px',
        transform: 'rotateX(25deg) translateZ(-2500px)',
      },
    },
  },
}));

export const Intro: React.FC = () => {
  const s = useStyles();

  const dispatch = useDispatch();
  useKey(CODE_ESCAPE, () => dispatch(hideIntro()));

  return (
    <div className={s.root}>
      <div className={s.fade} />
      <section className={s.starWars}>
        <div className="crawl">
          <div className="title">
            <p>BEB РАЗРАБОТКА</p>
            <h1>Постановка задачи</h1>
          </div>
          <p>
            Представим ситуацию: Илон таки колонизировал Марс, и людям открылся
            новый вид топлива. Лукойл получил его одним из первых, но открылась
            новая проблема: по-скольку спрос на топливо необычайно велик,
            необходимо продумать стратегию масштабирования компании (увеличения
            количества АЗС, поставок топлива, наема новых сотрудников) с учетом
            того, что поставки крайне нестабильны и возможна ситуация, когда
            топлива нет по полгода.
          </p>
          <p>
            В таком случае нужно минимизировать убытки. По условию, нет проблем
            с маркетингом, так что заправки всегда заполнены клиен- тами.
          </p>
          <p>
            Единственное, что может помешать продаже топлива – это его нехватка
            на конкретной АЗС (которая вызвана отсутствием поставок с хранилища,
            которая, в свою очередь, вызвана решением о прекращении поставок
            либо опустением хранилища)...
          </p>
          <p>
            ...Ожидаемый результат: веб-приложение в реальном времени, на
            котором список за- правок, каждую можно открыть и посмотреть,
            сколько сотрудников там работают и каких должностей, остаток
            топлива. Время учитывается по месяцам: сначала зада- ется
            последовательность чисел (объем топлива, прилетевший на Falcon X),
            потом эта последовательность накладывается на месяцы.
            Последовательность всегда можно редактировать, если редактируемый
            месяц еще не наступил. Это только один из вариантов UX, он может
            быть какой угодно. Бизнес-процесс: топливо, прилетевшее из космоса,
            сразу же оказывается в храни- лище. Дальше оно транспортируется
            танкерами по заправкам. Заправки обслужива- ют клиентов согласно
            своим возможностям, деньги идут в общий банк. Кроме объема топлива,
            поступившего в хранилище в определенный месяц, после запуска ничего
            менять нельзя. Кроме объема топлива, поступившего в хранилище в
            определенный месяц, после запуска ничего менять нельзя. Есть
            некоторые обязательные параметры, которые должны быть изменяемы в
            кон- фигурационном файле yml/config/properties/txt либо в
            веб-интерфейсе до запуска:{' '}
          </p>
          <p> - остаток топлива на АЗС </p>
          <p> - остаток топлива в хранилище </p>
          <p> - количество существующих АЗС </p>
          <p> - количество существующих танкеров для поставки топлива </p>
          <p> - стоимость одного танкера </p>
          <p> - время, за которое танкер доставит топливо в АЗС </p>
          <p> - время на обслуживание одной машины (клиента) </p>
          <p> - прибыль, полученная с одной машины (клиента) </p>
          <p> - средний чек </p>
          <p>
            - коэффициент увеличения среднего чека в зависимости от количества
            обслуживаемых мест{' '}
          </p>
          <p>
            - базовая стоимость содержания АЗС (без учета обслуживаемых мест){' '}
          </p>
          <p>
            - дополнительная стоимость содержания одного обслуживаемого места{' '}
          </p>
          <p> - время постройки базовой части АЗС </p>
          <p> - время постройки одного обслуживаемого места </p>
          <p> - стоимость содержания сотрудников: </p>
          <p> - кассир </p>
          <p> - заправщик </p>
          <p> - директор </p>
          <p> - охранник </p>
          <p>
            - количество обслуживаемых мест, при котором нужно нанять
            дополнительного кассира{' '}
          </p>
          <p> - вероятность увольнения сотрудника по ГПХ (в %) </p>
          <p>
            - время в секундах, сколько будет длиться один виртуальный месяц.{' '}
          </p>
          <p> Конфигурация: </p>
          <p>
            - для функционирования АЗС нужен 1 директор, 1 кассир и 1 охранник.{' '}
          </p>
          <p>
            - количество нанятых заправщиков равно количеству обслуживаемых
            мест.{' '}
          </p>
          <p> - обслуживаемые места можно строить, тратя деньги и время </p>
          <p> - чем больше заправка, тем больше средний чек </p>
          <p>
            - если количество обслуживаемых мест больше, чем (параметр
            конфигурации с одноименным названием), они не будут приносить
            дополнительный доход, пока не будет нанят новый кассир.{' '}
          </p>
          <p> - сотрудников можно нанимать по ТК и по ГПХ; </p>
          <p>
            При наеме по ТК при увольнении нужно выплатить ему месячный оклад,
            плюс месяц он будет продолжать работать, зато самовольно он не
            уволится. При наеме по ГПХ его можно уволить в любой момент, но он и
            сам тоже может уво- литься в любой момент (согласно коэффициенту
            (заданному в конфиге), который высчитывается каждый месяц для
            каждого работника). Нанимайте работников по ГПХ, если хотите сыграть
            в удачу){' '}
          </p>
          <p> Оценивание: </p>
          <p>
            Процедура оценивания будет строиться так: мы установим одинаковые
            значения конфигурации всем участникам и будем следить за
            результатом. При прочих равных максимальный балл получит команда,
            накопившая больше всего прибыли к концу работы программы (1 год
            виртуального времени).{' '}
          </p>
        </div>
      </section>
    </div>
  );
};
